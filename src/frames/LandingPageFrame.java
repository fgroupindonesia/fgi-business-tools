package frames;

import helper.LandingPageCenter;
import helper.URLManager;
import helper.UIForm;
import java.awt.BorderLayout;
import java.io.File;
import javafx.application.Platform;
import javafx.concurrent.Worker;
import javafx.embed.swing.JFXPanel;
import javafx.scene.Scene;
import javafx.scene.web.WebEngine;
import javafx.scene.web.WebView;
import javax.swing.JFileChooser;

/**
 *
 * @author staff
 */
public class LandingPageFrame extends WindowsSkeleton {

    /**
     * Creates new form LandingPagesForm
     */
    JFXPanel jfxPanel = new JFXPanel();
    WebView webView = null;
    WebEngine webEngine = null;

    public LandingPageFrame() {
        super.windowsTheme();
        initComponents();
        //renderWebBrowser();

        panelContent.add(jfxPanel, BorderLayout.CENTER);
        labelLoading.setVisible(false);

        lpm = new LandingPageCenter(labelLoading, this);

    }

    private void renderWebBrowser(String themeName) {

        Platform.runLater(() -> {

            webView = new WebView();

            webEngine = webView.getEngine();

            webView.getEngine().setOnStatusChanged(event -> {
                // System.out.println(" Status: " + event.getData());
                // do something here once it's changed
            });

            webEngine.setJavaScriptEnabled(true);
            // Load a sample web page without cache clearing
            webEngine.load(URLManager.buildURL(themeName, false));

            webEngine.getLoadWorker().stateProperty().addListener((observable, oldValue, newValue) -> {
                if (newValue == Worker.State.SUCCEEDED) {
                    // hide the loading icon
                    labelLoading.setVisible(false);
                }
            });

            // Set the JavaFX WebView as the content of the JFXPanel
            jfxPanel.setScene(new Scene(webView));

            // once everything is appeared, thus we passed into the LPCenter
            lpm.setWebEngine(webEngine);

            labelLoading.setVisible(true);
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        panelTitle = new javax.swing.JPanel();
        labelTitle = new javax.swing.JLabel();
        panelControlBottom = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        comboboxThemesOption = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        buttonModify = new javax.swing.JButton();
        buttonReset = new javax.swing.JButton();
        labelLoading = new javax.swing.JLabel();
        panelContent = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 600));
        setType(java.awt.Window.Type.POPUP);

        panelTitle.setBackground(new java.awt.Color(0, 153, 255));
        panelTitle.setAlignmentX(0.0F);
        panelTitle.setAlignmentY(0.0F);
        panelTitle.setPreferredSize(new java.awt.Dimension(468, 50));
        panelTitle.setLayout(new java.awt.BorderLayout());

        labelTitle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelTitle.setForeground(new java.awt.Color(255, 255, 255));
        labelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTitle.setText("Landing Page");
        panelTitle.add(labelTitle, java.awt.BorderLayout.CENTER);

        getContentPane().add(panelTitle, java.awt.BorderLayout.PAGE_START);

        panelControlBottom.setPreferredSize(new java.awt.Dimension(468, 50));

        jLabel2.setText("Themes : ");
        panelControlBottom.add(jLabel2);

        comboboxThemesOption.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Append", "Arsha", "HeroBiz", "FlexStart", "BizLand", "OnePage", "Day", "Bootslander", "Lumia", "Scaffold", "SoftLand", "Appland", "Shuffle", "Avilion", "TheEvent", "eStartup", "Siimple" }));
        comboboxThemesOption.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboboxThemesOptionItemStateChanged(evt);
            }
        });
        comboboxThemesOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboboxThemesOptionActionPerformed(evt);
            }
        });
        panelControlBottom.add(comboboxThemesOption);

        jLabel1.setText("|    Operations : ");
        panelControlBottom.add(jLabel1);

        buttonModify.setText("Modify This Theme");
        buttonModify.setEnabled(false);
        buttonModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonModifyActionPerformed(evt);
            }
        });
        panelControlBottom.add(buttonModify);

        buttonReset.setText("Reset");
        buttonReset.setEnabled(false);
        buttonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonResetActionPerformed(evt);
            }
        });
        panelControlBottom.add(buttonReset);

        labelLoading.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frames/images/preloader.gif"))); // NOI18N
        labelLoading.setText(" Loading ....");
        labelLoading.setPreferredSize(new java.awt.Dimension(150, 14));
        panelControlBottom.add(labelLoading);

        getContentPane().add(panelControlBottom, java.awt.BorderLayout.PAGE_END);

        panelContent.setLayout(new java.awt.BorderLayout());
        getContentPane().add(panelContent, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void comboboxThemesOptionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboboxThemesOptionItemStateChanged

        int indexNa = comboboxThemesOption.getSelectedIndex();

        if (indexNa != -1 && indexNa != 0) {
            // opening the themes
            String name = comboboxThemesOption.getSelectedItem().toString();

            renderWebBrowser(name);
            buttonModify.setText("Modify This Theme");

            labelTitle.setText("Landing Page");
            openLockButton(true);
        } else {
            openLockButton(false);
        }

        // System.out.println("Indexna" + indexNa);

    }//GEN-LAST:event_comboboxThemesOptionItemStateChanged

    private void buttonModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonModifyActionPerformed

        String themeName = comboboxThemesOption.getSelectedItem().toString();

        if (buttonModify.getText().equalsIgnoreCase("modify this theme")) {
            if (UIForm.isSelected(comboboxThemesOption, 0, -1)) {

                lpm.grab(themeName);
                buttonModify.setText("Saved All Changes.");

                labelTitle.setText("Landing Page [EDIT]");

            }
        } else {
            // now we saved the works
            fileChooser.setDialogTitle("Save As");
            int result = fileChooser.showSaveDialog(this);
            File selectedFile = null;
            if (result == JFileChooser.APPROVE_OPTION) {
                selectedFile = fileChooser.getSelectedFile();

                lpm.save(themeName, selectedFile);
                buttonModify.setText("Modify This Theme");

                labelTitle.setText("Landing Page");

            }

        }


    }//GEN-LAST:event_buttonModifyActionPerformed

    LandingPageCenter lpm;

    private void buttonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonResetActionPerformed

        buttonModify.setText("Modify This Theme");
        labelTitle.setText("Landing Page");

        //render back to the original layout
        String themeName = comboboxThemesOption.getSelectedItem().toString();
        lpm.reset(themeName);

    }//GEN-LAST:event_buttonResetActionPerformed

    private void comboboxThemesOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboboxThemesOptionActionPerformed

        if (comboboxThemesOption.getSelectedIndex() != -1) {
            // once changed then the button is also changed
            buttonModify.setText("Modify This Theme");
        }

    }//GEN-LAST:event_comboboxThemesOptionActionPerformed

    String urlTarget = null;

    public void reloadPage(String themeName, boolean localMode) {

        if (localMode) {

            urlTarget = URLManager.buildURLLocally(themeName, true);
        } else {
            urlTarget = URLManager.buildURL(themeName, true);
        }

        Platform.runLater(() -> {
            webEngine.load(urlTarget);
        });

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LandingPageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LandingPageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LandingPageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LandingPageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LandingPageFrame().setVisible(true);
            }
        });
    }

    private void openLockButton(boolean b) {
        buttonModify.setEnabled(b);
        buttonReset.setEnabled(b);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonModify;
    private javax.swing.JButton buttonReset;
    private javax.swing.JComboBox<String> comboboxThemesOption;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel labelLoading;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JPanel panelContent;
    private javax.swing.JPanel panelControlBottom;
    private javax.swing.JPanel panelTitle;
    // End of variables declaration//GEN-END:variables
}
