/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;

/**
 *
 * @author staff
 */
public class SplashScreenFrame extends WindowsSkeleton {

    private float opacity = 0.0f;
    private Timer fadeOutTimer;
    private Timer messagesEffect;

    @Override
    public void paint(Graphics g) {
        super.paint(g);

        // Draw a solid shadow on the right edge
        Graphics2D g2d = (Graphics2D) g;
        int shadowWidth = 20;
        int shadowHeight = getHeight();
        int shadowX = getWidth() - shadowWidth;
        int shadowY = 0;

        g2d.setColor(new Color(0, 0, 0, 100)); // Dark color for shadow
        g2d.fillRect(shadowX, shadowY, shadowWidth, shadowHeight);
    }

    /**
     * Creates new form SplashScreenFrame
     */
    public SplashScreenFrame() {
        super.windowsTheme();
        initComponents();
        getContentPane().setBackground(Color.WHITE);
        animation();

    }

    private void animation() {
        Timer timer = new Timer(30, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (opacity < 1.0f) {
                    opacity += 0.02f;
                    if (opacity > 1.0f) {
                        opacity = 1.0f;
                    }
                    setOpacity(opacity);
                } else {

                    // wait for sev
                    ((Timer) e.getSource()).stop();
                    delayFadeOut();
                }
            }
        });

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                timer.start();
            }
        });

    }

    int postMessage = 0;

    private void messageMimics() {

        messagesEffect = new Timer(750, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (postMessage == 0) {
                    labelLoading.setText("initalizing frames...");
                } else if (postMessage == 1) {
                    labelLoading.setText("preparing buttons...");
                } else if (postMessage == 2) {
                    labelLoading.setText("loading cridentials...");
                } else if (postMessage == 3) {
                    labelLoading.setText("setting configurations...");
                } else if (postMessage == 4) {
                    labelLoading.setText("system app is 100% ready!");
                }else if(postMessage == 5){
                    labelLoading.setVisible(false);
                    messagesEffect.stop();
                }

                postMessage++;
            }
        });
        messagesEffect.start();
    }

    private void fadeOut() {
        fadeOutTimer = new Timer(20, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (opacity > 0.0f) {
                    opacity -= 0.02f;
                    if (opacity < 0.0f) {
                        opacity = 0.0f;
                    }
                    setOpacity(opacity);
                } else {
                    ((Timer) e.getSource()).stop();
                    Starter.continueLogging();
                    dispose(); // Close the frame after fade-out
                }
            }
        });
        fadeOutTimer.start();
    }

    private void delayFadeOut() {
        Timer delayTimer = new Timer(5000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                ((Timer) e.getSource()).stop();
                fadeOut();
            }
        });
        delayTimer.start();
        // show another message while waiting...
        messageMimics();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelLoading = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(475, 262));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        labelLoading.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frames/images/preloader.gif"))); // NOI18N
        labelLoading.setText("loading assets...");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("FGI Business Tools");
        jLabel2.setPreferredSize(new java.awt.Dimension(343, 100));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frames/images/background_320.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(labelLoading))
                .addContainerGap(74, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel3)
                .addGap(5, 5, 5)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(labelLoading))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        fadeOutTimer.start();
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SplashScreenFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SplashScreenFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SplashScreenFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SplashScreenFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SplashScreenFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel labelLoading;
    // End of variables declaration//GEN-END:variables
}
